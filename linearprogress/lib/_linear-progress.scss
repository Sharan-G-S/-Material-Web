/**
 * @license
 * Copyright 2022 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

@use '../../motion/animation';
@use '../../sass/dom';
@use '../../compat/theme/custom-properties';
@use '../../sass/theme';
@use './linear-progress-theme';

///
/// Linear progress core styles.
///
@mixin core-styles() {
  @include linear-progress-theme.bar-color(primary);
  @include linear-progress-theme.buffer-color(
    linear-progress-theme.$baseline-buffer-color
  );
  @include linear-progress-theme.track-height(linear-progress-theme.$height);
  @include static-styles();
}

@mixin static-styles() {
  @include primary-indeterminate-translate-keyframes_;
  @include primary-indeterminate-scale-keyframes_;
  @include secondary-indeterminate-translate-keyframes_;
  @include secondary-indeterminate-scale-keyframes_;
  @include buffering-keyframes_;
  @include primary-indeterminate-translate-reverse-keyframes_;
  @include secondary-indeterminate-translate-reverse-keyframes_;
  @include buffering-reverse-keyframes_;

  .md3-linear-progress {
    position: relative;
    width: 100%;
    transform: translateZ(0);
    // Create a border around the bar in Windows High Contrast Mode.
    outline: 1px solid transparent;
    overflow: hidden;

    @include dom.forced-colors-mode() {
      outline-color: CanvasText;
    }

    transition: animation.sharp(opacity, 250ms);

    &__bar {
      position: absolute;
      width: 100%;
      height: 100%;
      animation: none;
      transform-origin: top left;

      transition: animation.sharp(transform, 250ms);
    }

    &__bar-inner {
      display: inline-block;
      position: absolute;
      width: 100%;
      animation: none;
      // border-top is used rather than background-color to ensure that the
      // bar is visible in Windows High Contrast Mode.
      border-top-style: solid;
    }

    &__buffer {
      display: flex;
      position: absolute;
      width: 100%;
      height: 100%;
    }

    &__buffer-dots {
      background-repeat: repeat-x;
      // background-size: 10px variables.$height;
      flex: auto;
      transform: rotate(180deg);

      animation: md3-linear-progress-buffering 250ms infinite linear;
    }

    &__buffer-bar {
      flex: 0 1 100%;

      transition: animation.sharp(flex-basis, 250ms);
    }

    &__primary-bar {
      transform: scaleX(0);
    }

    &__secondary-bar {
      display: none;
    }

    @include indeterminate_();

    // The rtl() mixin does not account for nested `dir` attributes. Set
    // `dir` attribute on root to take highest priority.
    &:not([dir='ltr']) {
      @include _rtl-styles();
    }

    &--closed {
      opacity: 0;
    }

    &--closed-animation-off {
      .md3-linear-progress__buffer-dots {
        animation: none;
      }

      &.md3-linear-progress--indeterminate {
        .md3-linear-progress__bar,
        .md3-linear-progress__bar .md3-linear-progress__bar-inner {
          animation: none;
        }
      }
    }
  }
}

// Private mixins.

@mixin indeterminate_() {
  &--indeterminate {
    .md3-linear-progress__bar {
      transition: none;
    }

    .md3-linear-progress__primary-bar {
      left: -145.166611%;
    }

    .md3-linear-progress__secondary-bar {
      left: -54.888891%;
      display: block;
    }

    &.md3-linear-progress--animation-ready {
      .md3-linear-progress__primary-bar {
        animation: md3-linear-progress-primary-indeterminate-translate 2s
          infinite linear;

        > .md3-linear-progress__bar-inner {
          animation: md3-linear-progress-primary-indeterminate-scale 2s infinite
            linear;
        }
      }

      .md3-linear-progress__secondary-bar {
        animation: md3-linear-progress-secondary-indeterminate-translate 2s
          infinite linear;

        > .md3-linear-progress__bar-inner {
          animation: md3-linear-progress-secondary-indeterminate-scale 2s
            infinite linear;
        }
      }
    }
  }
}

@mixin _rtl-styles() {
  .md3-linear-progress__bar {
    //TODO(b/249783996): Translate rtl deps to logical properties
    //@include rtl.ignore-next-line();
    right: 0;
    //@include rtl.ignore-next-line();
    -webkit-transform-origin: center right;
    //@include rtl.ignore-next-line();
    transform-origin: center right;
  }

  &.md3-linear-progress--animation-ready {
    .md3-linear-progress__primary-bar {
      animation-name: md3-linear-progress-primary-indeterminate-translate-reverse;
    }

    .md3-linear-progress__secondary-bar {
      animation-name: md3-linear-progress-secondary-indeterminate-translate-reverse;
    }
  }

  .md3-linear-progress__buffer-dots {
    animation: md3-linear-progress-buffering-reverse 250ms infinite linear;
    transform: rotate(0);
  }

  &.md3-linear-progress--indeterminate {
    .md3-linear-progress__primary-bar {
      //TODO(b/249783996): Translate rtl deps to logical properties
      //@include rtl.ignore-next-line();
      right: -145.166611%;
      //@include rtl.ignore-next-line();
      left: auto;
    }

    .md3-linear-progress__secondary-bar {
      //TODO(b/249783996): Translate rtl deps to logical properties
      //@include rtl.ignore-next-line();
      right: -54.888891%;
      //@include rtl.ignore-next-line();
      left: auto;
    }
  }
}

// Keyframes.

@mixin primary-indeterminate-translate-keyframes_ {
  @keyframes md3-linear-progress-primary-indeterminate-translate {
    0% {
      transform: translateX(0);
    }

    20% {
      animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);
      transform: translateX(0);
    }

    59.15% {
      animation-timing-function: cubic-bezier(
        0.302435,
        0.381352,
        0.55,
        0.956352
      );

      $primary-half: custom-properties.create(
        --md3-linear-progress-primary-half,
        83.67142%
      );
      @include apply-translate_($primary-half);
    }

    100% {
      $primary-full: custom-properties.create(
        --md3-linear-progress-primary-full,
        200.611057%
      );
      @include apply-translate_($primary-full);
    }
  }
}

@mixin primary-indeterminate-scale-keyframes_ {
  @keyframes md3-linear-progress-primary-indeterminate-scale {
    0% {
      transform: scaleX(0.08);
    }

    36.65% {
      animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);
      transform: scaleX(0.08);
    }

    69.15% {
      animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);
      transform: scaleX(0.661479);
    }

    100% {
      transform: scaleX(0.08);
    }
  }
}

@mixin secondary-indeterminate-translate-keyframes_ {
  @keyframes md3-linear-progress-secondary-indeterminate-translate {
    0% {
      animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);
      transform: translateX(0);
    }

    25% {
      animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);
      $secondary-quarter: custom-properties.create(
        --md3-linear-progress-secondary-quarter,
        37.651913%
      );
      @include apply-translate_($secondary-quarter);
    }

    48.35% {
      animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);
      $secondary-half: custom-properties.create(
        --md3-linear-progress-secondary-half,
        84.386165%
      );
      @include apply-translate_($secondary-half);
    }

    100% {
      $secondary-full: custom-properties.create(
        --md3-linear-progress-secondary-full,
        160.277782%
      );
      @include apply-translate_($secondary-full);
    }
  }
}

@mixin secondary-indeterminate-scale-keyframes_ {
  @keyframes md3-linear-progress-secondary-indeterminate-scale {
    0% {
      animation-timing-function: cubic-bezier(
        0.205028,
        0.057051,
        0.57661,
        0.453971
      );
      transform: scaleX(0.08);
    }

    19.15% {
      animation-timing-function: cubic-bezier(
        0.152313,
        0.196432,
        0.648374,
        1.004315
      );
      transform: scaleX(0.457104);
    }

    44.15% {
      animation-timing-function: cubic-bezier(
        0.257759,
        -0.003163,
        0.211762,
        1.38179
      );
      transform: scaleX(0.72796);
    }

    100% {
      transform: scaleX(0.08);
    }
  }
}

@mixin buffering-keyframes_ {
  @keyframes md3-linear-progress-buffering {
    from {
      // Normally the buffer dots start from the left and overflow to the right.
      // We rotate by 180deg so that the buffer dots start on the right when
      // in non-reversed mode and overflow to the left.
      transform: rotate(180deg) translateX(-10px);
    }
  }
}

@mixin primary-indeterminate-translate-reverse-keyframes_ {
  @keyframes md3-linear-progress-primary-indeterminate-translate-reverse {
    0% {
      transform: translateX(0);
    }

    20% {
      animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);
      transform: translateX(0);
    }

    59.15% {
      animation-timing-function: cubic-bezier(
        0.302435,
        0.381352,
        0.55,
        0.956352
      );
      $primary-half: custom-properties.create(
        --md3-linear-progress-primary-half-neg,
        -83.67142%
      );
      @include apply-translate_($primary-half);
    }

    100% {
      $primary-full: custom-properties.create(
        --md3-linear-progress-primary-full-neg,
        -200.611057%
      );
      @include apply-translate_($primary-full);
    }
  }
}

@mixin secondary-indeterminate-translate-reverse-keyframes_ {
  @keyframes md3-linear-progress-secondary-indeterminate-translate-reverse {
    0% {
      animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);
      transform: translateX(0);
    }

    25% {
      animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);
      $secondary-quarter: custom-properties.create(
        --md3-linear-progress-secondary-quarter-neg,
        -37.651913%
      );
      @include apply-translate_($secondary-quarter);
    }

    48.35% {
      animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);
      $secondary-half: custom-properties.create(
        --md3-linear-progress-secondary-half-neg,
        -84.386165%
      );
      @include apply-translate_($secondary-half);
    }

    100% {
      $secondary-full: custom-properties.create(
        --md3-linear-progress-secondary-full-neg,
        -160.277782%
      );
      @include apply-translate_($secondary-full);
    }
  }
}

@mixin buffering-reverse-keyframes_ {
  @keyframes md3-linear-progress-buffering-reverse {
    from {
      transform: translateX(-10px);
    }
  }
}

@mixin apply-translate_($value) {
  @include theme.property(
    transform,
    translateX(value),
    $replace: (value: $value)
  );
}
