//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

// TODO(b/228217731): Remove MDC/MWC dependencies
@use 'sass:map';
@use '../../sass/theme';
@use '../../sass/shape';
@use '../../elevation/lib/elevation-theme';
@use '../../sass/resolvers';
@use '../../compat/theme/theme-color';

$light-theme: (
  container-color: theme-color.$surface,
  container-height: 100%,
  container-shape: 0 16px 16px 0,
  container-surface-tint-layer-color: null,
  container-width: 360px,
  // TODO(b/216384393): Temporary existing token to use for shadow color
  divider-color: #000,
  modal-container-elevation: 1,
  scrim-color: null,
  scrim-opacity: 0.04,
  standard-container-elevation: 0,
);

@mixin theme($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme($light-theme, $theme);
  $theme: _resolve-theme($theme, $resolvers);
  $theme: theme.create-theme-vars($theme, 'navigation-drawer-modal');

  @include theme.emit-theme-vars($theme);
}

@mixin theme-styles($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme-styles(
    $light-theme,
    $theme,
    $require-all: false
  );
  $theme: _resolve-theme($theme, $resolvers);

  $theme: theme.create-theme-vars($theme, 'navigation-drawer-modal');

  .md3-navigation-drawer-modal {
    @include _container-color(map.get($theme, container-color));
    @include _container-shape(
      (
        start-start: map.get($theme, container-shape-start-start),
        start-end: map.get($theme, container-shape-start-end),
        end-end: map.get($theme, container-shape-end-end),
        end-start: map.get($theme, container-shape-end-start),
      )
    );
    @include _container-height(map.get($theme, container-height));
    @include _container-width(map.get($theme, container-width));
    @include elevation-theme.theme-styles(
      (
        overlay-opacity:
          map.get($theme, modal-container-elevation-overlay-opacity),
        surface-tint-layer-color:
          map.get($theme, container-surface-tint-layer-color),
      )
    );

    &.md3-navigation-drawer-modal--opened {
      @include elevation-theme.theme-styles(
        (
          shadow: map.get($theme, modal-container-elevation-shadow),
        )
      );
    }
  }

  @include _scrim-color(map.get($theme, scrim-color));
  @include _scrim-opacity(map.get($theme, scrim-opacity));
}

@function _resolve-theme($theme, $resolvers) {
  $theme: elevation-theme.resolve-theme(
    $theme,
    map.get($resolvers, elevation),
    $shadow-color-token: divider-color,
    $elevation-tokens: (modal-container-elevation)
  );
  $theme: shape.resolve-theme(
    $theme,
    map.get($resolvers, shape),
    container-shape
  );

  @return $theme;
}

@mixin _container-color($color) {
  background-color: $color;
}

@mixin _container-height($height) {
  height: $height;
}

@mixin _container-shape($shape) {
  border-start-start-radius: map.get($shape, start-start);
  border-start-end-radius: map.get($shape, start-end);
  border-end-end-radius: map.get($shape, end-end);
  border-end-start-radius: map.get($shape, end-start);
}

@mixin _container-width($width) {
  @if $width != null {
    &.md3-navigation-drawer-modal--opened {
      inline-size: $width;
    }

    .md3-navigation-drawer-modal__slot-content {
      min-inline-size: $width;
      max-inline-size: $width;
    }
  }
}

@mixin _scrim-color($scrim-color) {
  .md3-navigation-drawer-modal__scrim {
    background-color: $scrim-color;
  }
}

@mixin _scrim-opacity($scrim-opacity) {
  .md3-navigation-drawer-modal--scrim-visible {
    opacity: $scrim-opacity;
  }
}
