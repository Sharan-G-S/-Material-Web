//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use '../../sass/theme';
@use '../../sass/tokens';

@function values($exclude-hardcoded-values: false) {
  $state-values: tokens.md-sys-state-values($exclude-hardcoded-values);
  $default-shape: map.get(
    tokens.md-sys-shape-values($exclude-hardcoded-values),
    corner-none
  );
  $default-color: if($exclude-hardcoded-values, null, black);
  // add missing tokens
  $values: map.merge(
    $state-values,
    (
      state-layer-shape: $default-shape,
      focus-state-layer-color: $default-color,
      hover-state-layer-color: $default-color,
      pressed-state-layer-color: $default-color,
      dragged-state-layer-color: $default-color,
    )
  );

  @return $values;
}

@mixin theme-styles($theme) {
  $theme: theme.validate-theme-styles(values(), $theme, $require-all: false);

  $theme: theme.create-theme-vars($theme, ripple);

  @include _container-shape(map.get($theme, state-layer-shape));

  &::before {
    @include _hover-focus-color(map.get($theme, hover-state-layer-color));
  }

  &::after {
    @include _press-color(map.get($theme, pressed-state-layer-color));
  }

  &.md3-ripple--hovered::before {
    @include _ripple-opacity(map.get($theme, hover-state-layer-opacity));
    @include _hover-focus-color(map.get($theme, hover-state-layer-color));
  }

  &.md3-ripple--focused::before {
    @include _ripple-opacity(map.get($theme, focus-state-layer-opacity));
    @include _hover-focus-color(map.get($theme, focus-state-layer-color));
  }

  &.md3-ripple--pressed::after {
    @include _ripple-opacity(map.get($theme, pressed-state-layer-opacity));
  }

  &.md3-ripple--unbounded {
    $unbounded: (
      state-layer-shape: map.get(tokens.md-sys-shape-values(), corner-full),
    );
    $unbounded: theme.create-theme-vars($unbounded, ripple);
    @include _container-shape(map.get($unbounded, state-layer-shape));
  }
}

@mixin _container-shape($shape) {
  border-radius: $shape;
}

@mixin _hover-focus-color($color) {
  background-color: $color;
}

@mixin _ripple-opacity($opacity) {
  opacity: $opacity;
}

@mixin _press-color($color) {
  background: radial-gradient(
    closest-side,
    #{$color} max(calc(100% - 70px), 65%),
    transparent 100%
  );
}

@mixin theme($theme) {
  $theme: theme.validate-theme(values(), $theme);
  $theme: theme.create-theme-vars($theme, ripple);

  @include theme.emit-theme-vars($theme);
}
