//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

// TODO(b/228217731): Remove MDC/MWC dependencies
@use 'sass:map';
@use '../../compat/theme/state';
@use '@material/typography/typography';
@use '../../sass/resolvers';
@use '../../sass/theme';
@use '../../tokens';
@use './fab-shared-theme';

$surface-theme: tokens.md-comp-extended-fab-surface-values();

@function _resolve-theme($theme, $resolvers) {
  @return fab-shared-theme.resolve-theme($theme, $resolvers);
}

@mixin primary-theme() {
  $primary-theme: tokens.md-comp-extended-fab-primary-values();
  @include theme($primary-theme);
}

@mixin secondary-theme() {
  $secondary-theme: tokens.md-comp-extended-fab-secondary-values();
  @include theme($secondary-theme);
}

@mixin tertiary-theme() {
  $tertiary-theme: tokens.md-comp-extended-fab-tertiary-values();
  @include theme($tertiary-theme);
}

@mixin branded-theme() {
  $branded-theme: tokens.md-comp-extended-fab-branded-values();
  @include theme($branded-theme);
}

@mixin theme($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme($surface-theme, $theme);
  $theme: _resolve-theme($theme, $resolvers);
  $theme: theme.create-theme-vars($theme, fab-extended);

  @include theme.emit-theme-vars($theme);
}

@mixin theme-styles($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme-styles($surface-theme, $theme);
  $theme: _resolve-theme($theme, $resolvers);
  $theme: theme.create-theme-vars($theme, fab-extended);

  @include fab-shared-theme.theme-styles($theme);

  height: map.get($theme, container-height);

  @include _label-color(
    (
      default: map.get($theme, label-text-color),
      focus: map.get($theme, focus-label-text-color),
      hover: map.get($theme, hover-label-text-color),
      pressed: map.get($theme, pressed-label-text-color),
    )
  );

  @include _label-typography(
    (
      font: map.get($theme, label-text-font),
      line-height: map.get($theme, label-text-line-height),
      size: map.get($theme, label-text-size),
      weight: map.get($theme, label-text-weight),
      tracking: map.get($theme, label-text-tracking),
    )
  );
}

@mixin _label-color($color-or-map) {
  @include state.default(fab-shared-theme.$selectors) {
    @include _set-label-color(state.get-default-state($color-or-map));
  }

  @include state.hover(fab-shared-theme.$selectors) {
    @include _set-label-color(state.get-hover-state($color-or-map));
  }

  @include state.focus(fab-shared-theme.$selectors) {
    @include _set-label-color(state.get-focus-state($color-or-map));
  }

  @include state.pressed(fab-shared-theme.$selectors) {
    @include _set-label-color(state.get-pressed-state($color-or-map));
  }
}

@mixin _set-label-color($color) {
  .md3-fab__label {
    color: $color;
  }
}

@mixin _label-typography($typography-map) {
  font-family: map.get($typography-map, font);
  line-height: map.get($typography-map, line-height);
  font-size: map.get($typography-map, size);
  font-weight: map.get($typography-map, weight);
  letter-spacing: map.get($typography-map, tracking);
}
